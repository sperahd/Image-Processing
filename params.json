{
  "name": "TS Files",
  "tagline": "Everything about ts files  and associated codecs",
  "body": "Some Important Links:\r\n\r\nhttp://www.bretl.com/mpeghtml/MPEGindex.htm(consider this a benchmark)\r\nhttp://downloads.bbc.co.uk/rd/pubs/reports/1996-01.pdf\r\nhttp://downloads.bbc.co.uk/rd/pubs/reports/1996-02.pdf\r\nhttp://downloads.bbc.co.uk/rd/pubs/reports/1996-03.pdf\r\n\r\n# Debugging dart logs:\r\n  When low logs appear:\r\n  Check in the following order:\r\n  1. DDC-128 It is not ddc-128 if ts parser is not hung. If the audio and video pts in ts parser logs are varying when the low logs are coming it means it's not DDC-128.\r\n  2. DDC-353 It is not DDC-353 if device agent is not purging and new file didn't start and there was no seek done for the new file.\r\n  3. Check before low comes: If the diff goes off suddenly, it means either video or audio is not being rendered. Video in z3 is always rendered so when it looks like video is stuck it actually means some other issues. Which in case of hd can be too many graphics or 100% graphics.\r\n\r\n# Some Definitions:\r\n\r\nEntropy: The smallest theoretically achievable average word length for lossless compression is equal to the entropy of the source. Further compression is possible only if it is lossy.\r\n\r\nPixel: A small point in an image. For example: ARGB requires 4 bytes for each pixel(1 byte a(alpha), r, g, b). YUV420 requires 6 bytes per 4 pixels.\r\n\r\n__ Elementary Streams: \r\n        Every ES is a pid in TS. Thumb rule: If something has a pid it is an ES. PAT is an ES, PMT is an ES etc.\r\n        All ES are packetised into PES. An ES can be divided into multiple PES. The PES might be intermixed, e.g. a, v, a, a, a, v, v, v, a, PAT, PMT. \r\nPES generally have a fixed length apart from a case of a video ES.\r\nDVB says one pes cannot have more than one video frame, but one video frame can go over multiple pes. No such standard for audio.\r\n__ How to find PAT and PMT:\r\n    For PAT:\r\n    Start from beginning of file:\r\n    i) For every 188 bytes keep getting the pid and comparing with 0(pid of pat always fixed in ts file). When this comparison is true, it means we have found the first packet of pat(point A) and now we will get the pes packet for pat. \r\n    ii) We will then try to get the length of pes packet and keep reading till that length(point B = point A + length). So, from point A to point B will be our pat information.\r\n    iii) We will also find the PMT(pmt_pid) pid(s) from the PAT.\r\n    For PMT:\r\n    Repeat the above steps but now the start point will be point B + start of buffer. Comparison will be between each ts_packet_pid and pmt_pid found above. As soon as the comparison passes goto step ii) above.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}